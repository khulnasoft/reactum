name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Check pnpm version
      run: pnpm --version

    - name: Install dependencies
      run: pnpm install

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install pnpm
      run: npm install -g pnpm
      with:
        dir: ./hooks.khulnasoft.com/

    - name: Check pnpm version
      run: pnpm --version
      with:
        dir: ./hooks.khulnasoft.com/

    - name: Install dependencies
      run: pnpm install
      with:
        dir: ./hooks.khulnasoft.com/

    - name: Build project
      run: pnpm run build
      with:
        dir: ./hooks.khulnasoft.com/

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build
        asset_name: build.zip
        asset_content_type: application/zip

    - name: Publish to GitHub Packages
      run: |
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc
        pnpm publish --registry=https://npm.pkg.github.com
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}